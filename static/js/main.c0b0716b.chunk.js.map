{"version":3,"sources":["reportWebVitals.js","components/Cards/Card.js","components/Cards/CardList.js","components/SearchBox.js","components/Scroll.js","constants.js","containers/App.js","actions.js","reducers.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","src","alt","CardList","robotsToDisplay","map","username","SearchBox","onSearchChange","type","placeholder","onChange","value","target","Scroll","children","style","overflowY","marginTop","borderTop","height","CHANGE_SEARCHFIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","connect","state","searchField","searchRobots","robots","requestRobots","isPending","error","dispatch","handleSearchChange","payload","handleRequestRobots","fetch","response","json","data","catch","err","useEffect","filteredRobots","filter","robot","toLowerCase","includes","initialStateSearch","initialStateRequest","logger","createLogger","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0b0716b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nexport default function Card({ name, email, id }) {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5\">\r\n      <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nexport default function CardList({ robotsToDisplay }) {\r\n  return (\r\n    <div className=\"center w-80 mv3\">\r\n      {robotsToDisplay.map(({ id, username, name, email }) => {\r\n        return (\r\n          <Card\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            username={username}\r\n            email={email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function SearchBox({ onSearchChange }) {\r\n  const handleSearch = ({ target }) => {\r\n    const { value } = target;\r\n    onSearchChange(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"Search robots...\"\r\n        onChange={handleSearch}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Scroll({ children }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: 'scroll',\r\n        marginTop: '16px',\r\n        borderTop: '1px solid green',\r\n        height: '800px',\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\r\n","import React, { useEffect } from 'react';\r\nimport CardList from '../components/Cards/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport { setSearchField, requestRobots } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchRobots.searchField,\r\n    robots: state.requestRobots.robots,\r\n    isPending: state.requestRobots.isPending,\r\n    error: state.requestRobots.error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    handleSearchChange: (value) => dispatch(setSearchField(value)),\r\n    handleRequestRobots: () => dispatch(requestRobots()),\r\n  };\r\n};\r\n\r\nconst App = ({\r\n  searchField,\r\n  handleSearchChange,\r\n  robots,\r\n  handleRequestRobots,\r\n  isPending,\r\n}) => {\r\n  useEffect(() => {\r\n    handleRequestRobots();\r\n  }, []);\r\n\r\n  const filteredRobots = robots.filter((robot) =>\r\n    robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n  );\r\n\r\n  return isPending ? (\r\n    <h1 className=\"tc f1\">Loading...</h1>\r\n  ) : (\r\n    <div className=\"tc\">\r\n      <h1 className=\"f1\">Robofriends</h1>\r\n      <h2 className=\"redux-header\">Redux Version</h2>\r\n      <SearchBox onSearchChange={handleSearchChange} />\r\n      <Scroll>\r\n        <CardList robotsToDisplay={filteredRobots} />\r\n      </Scroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED,\r\n} from './constants.js';\r\n\r\nexport const setSearchField = (text) => ({\r\n  type: CHANGE_SEARCHFIELD,\r\n  payload: text,\r\n});\r\n\r\nexport const requestRobots = () => (dispatch) => {\r\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then((response) => response.json())\r\n    .then((data) => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n    .catch((err) => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: err }));\r\n};\r\n","import {\r\n  CHANGE_SEARCHFIELD,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n  REQUEST_ROBOTS_FAILED,\r\n} from './constants.js';\r\n\r\nconst initialStateSearch = { searchField: '' };\r\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCHFIELD:\r\n      return { ...state, searchField: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialStateRequest = { isPending: false, robots: [], error: '' };\r\nexport const requestRobots = (state = initialStateRequest, action = {}) => {\r\n  switch (action.type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      return { ...state, isPending: true };\r\n    case REQUEST_ROBOTS_SUCCESS:\r\n      return { ...state, isPending: false, robots: action.payload };\r\n    case REQUEST_ROBOTS_FAILED:\r\n      return { ...state, isPending: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\nimport { searchRobots, requestRobots } from './reducers';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}